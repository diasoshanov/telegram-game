#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–æ–π Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞
–¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏: pip install python-telegram-bot
"""

import json
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "7819461914:AAHG0KojLn3yESSPunxToNYT9hyOzPOerTk"
GAME_URL = "https://t.me/kolesa_game_bot/Diasgame"  # URL –≤–∞—à–µ–≥–æ Web App

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
game_results = []

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ Programming Match-3", web_app={"url": GAME_URL})]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    message = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É Programming Match-3! üöÄ\n\n"
        "üéØ –¶–µ–ª—å: –°–æ–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ –∑–∞ 2 –º–∏–Ω—É—Ç—ã\n"
        "üéÆ –ú–µ—Ö–∞–Ω–∏–∫–∞: –°–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –ª–∏–Ω–∏–∏ –∏–∑ 3+ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∏–∫–æ–Ω–æ–∫ —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        "üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏: –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ —Å –Ω–∞–∏–≤—ã—Å—à–∏–º–∏ –æ—á–∫–∞–º–∏\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!"
    )
    
    await update.message.reply_text(message, reply_markup=reply_markup)

async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Web App"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –∏–≥—Ä—ã
        web_app_data = update.message.web_app_data.data
        game_result = json.loads(web_app_data)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_id = update.effective_user.id
        user_name = update.effective_user.first_name or update.effective_user.username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = {
            "user_id": user_id,
            "user_name": user_name,
            "score": game_result.get("score", 0),
            "time": game_result.get("time", "00:00"),
            "timestamp": str(update.message.date)
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        game_results.append(result)
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –æ—á–∫–∞–º
        game_results.sort(key=lambda x: x["score"], reverse=True)
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
        player_position = next((i + 1 for i, r in enumerate(game_results) if r["user_id"] == user_id), len(game_results))
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = f"üéÆ –†–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã: {user_name}\n\n"
        message += f"üèÜ –û—á–∫–∏: {result['score']}\n"
        message += f"‚è±Ô∏è –í—Ä–µ–º—è: {result['time']}\n"
        message += f"üèÖ –ü–æ–∑–∏—Ü–∏—è: {player_position}\n\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10
        message += "üèÜ –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤:\n"
        top_10 = game_results[:10]
        for i, player in enumerate(top_10):
            medal = "ü•á" if i == 0 else "ü•à" if i == 1 else "ü•â" if i == 2 else f"{i + 1}."
            message += f"{medal} {player['user_name']}: {player['score']} –æ—á–∫–æ–≤\n"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if player_position <= 3:
            message += "\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤ —Ç–æ–ø-3!"
        elif player_position <= 10:
            message += "\nüëç –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã –≤ —Ç–æ–ø-10!"
        else:
            message += "\nüí™ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø-10!"
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        keyboard = [
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", web_app={"url": GAME_URL})]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(message, reply_markup=reply_markup)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def top_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ø-10"""
    if not game_results:
        await update.message.reply_text("üìä –ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º! üöÄ")
        return
    
    message = "üèÜ –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤:\n\n"
    top_10 = game_results[:10]
    
    for i, player in enumerate(top_10):
        medal = "ü•á" if i == 0 else "ü•à" if i == 1 else "ü•â" if i == 2 else f"{i + 1}."
        message += f"{medal} {player['user_name']}\n"
        message += f"   –û—á–∫–∏: {player['score']} | –í—Ä–µ–º—è: {player['time']}\n\n"
    
    keyboard = [
        [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", web_app={"url": GAME_URL})]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(message, reply_markup=reply_markup)

async def reset_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    global game_results
    game_results.clear()
    await update.message.reply_text("üóëÔ∏è –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä —Å–±—Ä–æ—à–µ–Ω—ã.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    help_text = (
        "ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n\n"
        "/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/top - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤\n"
        "/reset - –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "üéÆ –ò–≥—Ä–∞: Programming Match-3\n"
        "–°–æ–±–∏—Ä–∞–π—Ç–µ –ª–∏–Ω–∏–∏ –∏–∑ –∏–∫–æ–Ω–æ–∫ —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!"
    )
    await update.message.reply_text(help_text)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    print(f"ü§ñ –¢–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...")
    print(f"üéÆ URL –∏–≥—Ä—ã: {GAME_URL}")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("top", top_command))
    application.add_handler(CommandHandler("reset", reset_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    application.run_polling()

if __name__ == "__main__":
    main() 